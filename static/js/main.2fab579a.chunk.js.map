{"version":3,"sources":["firebase-config.js","Components/Sidebar.js","Components/Topbar.js","assets/NoDataImg.jpg","Components/NoData.js","Components/ReadBlogs.js","Components/CreateBlogs.js","Components/Register.js","Components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getFirestore","Sidebar","navigate","useNavigate","className","to","onClick","localStorage","removeItem","sessionStorage","Topbar","useState","username","setUserName","userEmail","setUserEmail","useEffect","getItem","NoData","src","NoDataImg","class","ReadBlogs","databaseRef","blogs","setBlogs","dataLoading","setDataLoading","getBlogs","a","getDocs","docs","map","doc","data","id","console","log","length","Dimmer","active","Loader","indeterminate","blog","Image","banner","title","author","blogPost","inlineStyleRanges","style","text","countryOptions","key","value","CreateBlogs","setTitle","setAuthor","setBanner","loading","setLoading","file","setFile","privacy","setPrivacy","setBlogPost","Form","Field","placeholder","onChange","e","target","Select","options","outerText","getPrivacy","toolbarClassName","wrapperClassName","editorClassName","blocks","type","hidden","preventDefault","files","for","name","Button","primary","storage","getStorage","uploadedImageName","Math","random","toString","substring","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","error","getDownloadURL","then","downloadURL","toast","success","addDoc","Register","email","setEmail","password","setPassword","Card","Content","Header","Feed","Event","auth","getAuth","createUserWithEmailAndPassword","userCredentials","setItem","user","accessToken","catch","code","provider","GoogleAuthProvider","signInWithEmailAndPassword","Divider","horizontal","signInWithPopup","result","displayName","err","collection","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fab579a.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBvE6lrJfKp4ufBf4aLpyj6VeQotmTj90M\",\r\n  authDomain: \"firegram-e4c96.firebaseapp.com\",\r\n  projectId: \"firegram-e4c96\",\r\n  storageBucket: \"firegram-e4c96.appspot.com\",\r\n  messagingSenderId: \"1039021562599\",\r\n  appId: \"1:1039021562599:web:77c4f8e7d3e0432ec12042\",\r\n  measurementId: \"G-W86ZHBCVM9\"\r\n};\r\n\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const database = getFirestore(app);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport './Sidebar.css';\r\nexport default function Sidebar() {\r\n    let navigate = useNavigate();\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/React-tailwind-blog/login')\r\n    }\r\n    return (\r\n        <div className=\"sidebar-main\">\r\n            <div className=\"sidebar-menu\">\r\n                <ul>\r\n                    <Link to={'/React-tailwind-blog/createBlogs'}>\r\n                        <li className='sidebar-lists'>Create Blogs</li>\r\n                    </Link>\r\n                    <Link to={'/React-tailwind-blog/readBlogs'}>\r\n                        <li className='sidebar-lists'>Public Blogs</li>\r\n                    </Link>\r\n                    \r\n                    <li className='sidebar-lists' onClick={handleLogout}>Log out</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nexport default function Topbar() {\r\n  const [username, setUserName] = useState('')\r\n  const [userEmail, setUserEmail] = useState('');\r\n  useEffect(() => {\r\n    setUserName(localStorage.getItem('User Name'));\r\n    setUserEmail(localStorage.getItem('User Email'))\r\n  }, [])\r\n  return (\r\n    <div className=\"float-right text-bold\">\r\n      {/* <div className=\"menu-icon\" onClick={openMenu}>\r\n        {isMenuOpened ? <AiOutlineMenuUnfold size=\"3em\" onClick={openMenu} /> : <AiOutlineMenuFold size=\"3em\" onClick={openMenu} />}\r\n      </div> */}\r\n      <div className=\"welcome-text-container\">\r\n        <p>Welcome, {username ? username : userEmail} 🙌</p>\r\n      </div>\r\n      {/* {isMenuOpened ?\r\n        <div className=\"left-drawer\">\r\n          <div className=\"drawer-btn-container\">\r\n            <button class=\"btn btn-green\" onClick={goToRead}>\r\n              Read the Blogs\r\n            </button>\r\n            <button class=\"btn mob-btn-red mt-4\">\r\n              Log out\r\n            </button>\r\n          </div>\r\n        </div> :\r\n\r\n        \"\"} */}\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/NoDataImg.6ad77992.jpg\";","import React from 'react';\r\nimport NoDataImg from '../assets/NoDataImg.jpg';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function NoData() {\r\n    let navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/React-tailwind-blog/login')\r\n    }\r\n    return (\r\n        <div className=\"no-data-container\">\r\n            <img className=\"no-data-image\" src={NoDataImg} />\r\n            <h1 className=\"no-data-text\">Please Write Some Blogs! ☹️</h1>\r\n            <button class=\"btn btn-green\" onClick={() => navigate('/React-tailwind-blog/createBlogs')}>\r\n                Write a Blog..\r\n            </button>\r\n\r\n            <button class=\"btn btn-green mt-3\" onClick={handleLogout}>\r\n                Log out\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDocs } from 'firebase/firestore';\r\nimport Sidebar from './Sidebar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dimmer, Loader, Image } from 'semantic-ui-react';\r\nimport Topbar from './Topbar';\r\nimport NoData from './NoData';\r\nexport default function ReadBlogs({ databaseRef }) {\r\n    let navigate = useNavigate();\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [dataLoading, setDataLoading] = useState(true);\r\n    const getBlogs = async () => {\r\n        const blogs = await getDocs(databaseRef);\r\n        setBlogs(blogs.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        console.log(blogs.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        setDataLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n        if (!userToken) {\r\n            navigate('/React-tailwind-blog/login')\r\n        }\r\n        else {\r\n            getBlogs();\r\n        }\r\n    }, [])\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/React-tailwind-blog/login')\r\n    }\r\n\r\n    return (\r\n        <div className=\"read-form-container mt-3 mb-2\">\r\n            <Topbar />\r\n            <div className=\"sidebar-body\">\r\n                <Sidebar />\r\n            </div>\r\n            {blogs.length > 0 ? (\r\n                <div className=\"flex-inline\">\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/React-tailwind-blog/createBlogs')}>\r\n                            Create Blogs\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"logout-button\">\r\n                        <button class=\"btn btn-green ml-3\" onClick={handleLogout}>\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            {\r\n                dataLoading ? (\r\n                    <Dimmer active>\r\n                        <Loader indeterminate>Loading Blogs for you..</Loader>\r\n                    </Dimmer>\r\n                ) : (\r\n                    blogs.length > 0 ? (\r\n                        blogs.map((blog) => {\r\n                            return (\r\n                                <div class=\"blog-posts\">\r\n                                    <div class=\"blog-content\">\r\n                                        <div className=\"banner-container\">\r\n                                            <Image src={blog.banner} />\r\n                                        </div>\r\n                                        <h1 class=\"blog-title\">{blog.title}</h1>\r\n                                        <p class=\"author-name mt-4\">By {blog.author}</p>\r\n                                        <p class=\"blog-post\">\r\n                                            {blog.blogPost.map((blogPost) => {\r\n                                                return (\r\n                                                    <p>\r\n                                                        {blogPost.inlineStyleRanges.length > 0 ?\r\n                                                            blogPost.inlineStyleRanges[0].style === 'BOLD' ?\r\n                                                                <p className=\"bold-text\">{blogPost.text}</p> : blogPost.inlineStyleRanges[0].style === 'ITALIC' ?\r\n                                                                    <p className=\"italic-text\">{blogPost.text}</p> : blogPost.inlineStyleRanges[0].style === 'UNDERLINE' ?\r\n                                                                        <p className=\"underlined-text\">{blogPost.text}</p> : <p>{blogPost.text}</p> : <p>{blogPost.text}</p>}\r\n                                                    </p>\r\n                                                )\r\n                                            })}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <NoData />\r\n                    )\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Select, Button, Icon } from 'semantic-ui-react';\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { addDoc } from 'firebase/firestore';\r\nimport Sidebar from './Sidebar';\r\nimport Topbar from './Topbar';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nconst countryOptions = [\r\n    { key: 'private', value: 'private', text: 'Private' },\r\n    { key: 'public', value: 'public', text: 'Public' },\r\n]\r\n\r\nexport default function CreateBlogs({ databaseRef }) {\r\n    let navigate = useNavigate();\r\n    const [title, setTitle] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [banner, setBanner] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [file, setFile] = useState({});\r\n    const [privacy, setPrivacy] = useState(null);\r\n    const [blogPost, setBlogPost] = useState([])\r\n    const getPrivacy = (e) => {\r\n        setPrivacy(e.target.outerText)\r\n    }\r\n    const BlogBodyChange = (blog) => {\r\n        setBlogPost(blog.blocks)\r\n    }\r\n\r\n    const submitBlogs = () => {\r\n        if (title && privacy && author && blogPost) {\r\n            addDoc(databaseRef, {\r\n                title: title,\r\n                privacy: privacy,\r\n                author: author,\r\n                banner: banner,\r\n                blogPost: blogPost\r\n            })\r\n                .then(() => {\r\n                    navigate('/React-tailwind-blog/readBlogs')\r\n                })\r\n        }\r\n        else {\r\n            toast.error(\"Please fill all the fields...\");\r\n        }\r\n    }\r\n\r\n    const selectFile = (e) => {\r\n        e.preventDefault();\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const uploadFile = () => {\r\n        const storage = getStorage();\r\n        let uploadedImageName = (Math.random() + 1).toString(36).substring(7);\r\n        const storageRef = ref(storage, uploadedImageName);\r\n        const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n        uploadTask.on('state_changed',\r\n            (snapshot) => {\r\n                setLoading(true)\r\n            },\r\n            (error) => {\r\n                // Handle unsuccessful uploads\r\n            },\r\n            () => {\r\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                    setLoading(false)\r\n                    setBanner(downloadURL)\r\n                    toast.success(\"Banner Added\");\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n        if (!userToken) {\r\n            navigate('/React-tailwind-blog/login')\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"create-form-container\">\r\n            <div className=\"read-button\">\r\n                <button class=\"btn btn-green\" onClick={() => navigate('/React-tailwind-blog/readBlogs')}>\r\n                    Read Blogs\r\n                </button>\r\n            </div>\r\n            <h3 className=\"blog-text\">Create a Blog..</h3>\r\n            <ToastContainer />\r\n            <Topbar />\r\n            <div className=\"sidebar-body\">\r\n                <Sidebar />\r\n            </div>\r\n            <Form>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Title</label>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        placeholder='Please Enter the Title'\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Privacy</label>\r\n                    <Select\r\n                        className=\"form-input\"\r\n                        placeholder='Select the Privacy'\r\n                        options={countryOptions}\r\n                        onChange={(e) => getPrivacy(e)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field className=\"form-field\">\r\n                    <label className=\"form-label\">Content</label>\r\n                    <Editor\r\n                        // editorState={editorState}\r\n                        toolbarClassName=\"toolbarClassName\"\r\n                        wrapperClassName=\"wrapperClassName\"\r\n                        editorClassName=\"editorClassName\"\r\n                        onChange={BlogBodyChange}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Banner Image</label>\r\n                    <input type=\"file\" id=\"actual-btn\" hidden onChange={selectFile} />\r\n                    <div className=\"flex-inline\">\r\n                        <label for=\"actual-btn\" className=\"file-label\">\r\n                            {file.name ? file.name : 'Choose Banner Image'}\r\n                        </label>\r\n                        <Button\r\n                            loading={loading ? true : false}\r\n                            primary\r\n                            className=\"upload-button\"\r\n                            onClick={uploadFile}>\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Author Name</label>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        placeholder='Please Enter the Author Name'\r\n                        onChange={(e) => setAuthor(e.target.value)}\r\n                    />\r\n                </Form.Field>\r\n                <div className=\"btn-container\">\r\n                    <button class=\"btn btn-green\" onClick={submitBlogs}>\r\n                        Submit your Blog\r\n                    </button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Feed, Form } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nexport default function Register() {\r\n    let navigate = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n\r\n        if (userToken) {\r\n            navigate('/React-tailwind-blog/readBlogs')\r\n        }\r\n    }, [])\r\n\r\n    const handleRegister = () => {\r\n        if (email && password) {\r\n            let auth = getAuth();\r\n\r\n            createUserWithEmailAndPassword(auth, email, password)\r\n                .then((userCredentials) => {\r\n                    localStorage.setItem('User Email', userCredentials.user.email)\r\n                    sessionStorage.setItem('Auth Key', userCredentials.user.accessToken)\r\n                    navigate('/React-tailwind-blog/readBlogs')\r\n                })\r\n                .catch((error) => {\r\n                    if (error.code === 'auth/email-already-in-use') {\r\n                        toast.error(\"Email already Exists..\");\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.error(\"Please Enter the Credentials\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"card-centered\">\r\n            <ToastContainer />\r\n            <Card className=\"card-body\">\r\n                <Card.Content>\r\n                    <Card.Header>Create your account to get started..</Card.Header>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    <Feed>\r\n                        <Feed.Event>\r\n                            {/* <Feed.Label image='/images/avatar/small/jenny.jpg' /> */}\r\n                            <Feed.Content>\r\n                                <Form>\r\n                                    <Form.Field>\r\n                                        <label>Email</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            placeholder='Please Enter your Email'\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <Form.Field>\r\n                                        <label>Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            placeholder='Please Enter your Password'\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <div className=\"btn-centered\">\r\n                                        <button\r\n                                            onClick={handleRegister}\r\n                                            class=\"regiser-btn px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">\r\n                                            Create your account..\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => navigate('/React-tailwind-blog/login')}\r\n                                            class=\"login-btn px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">\r\n                                            Login\r\n                                        </button>\r\n                                    </div>\r\n                                </Form>\r\n                            </Feed.Content>\r\n                        </Feed.Event>\r\n                    </Feed>\r\n                </Card.Content>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Feed, Form, Divider } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { getAuth, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport GoogleButton from 'react-google-button'\r\nexport default function Register() {\r\n    let navigate = useNavigate();\r\n    const provider = new GoogleAuthProvider();\r\n    const auth = getAuth();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n\r\n        if (userToken) {\r\n            navigate('/React-tailwind-blog/readBlogs')\r\n        }\r\n    }, [])\r\n\r\n    const authWithGoogle = () => {\r\n        signInWithPopup(auth, provider)\r\n        .then((result) => {\r\n            localStorage.setItem('User Name', result.user.displayName);\r\n            sessionStorage.setItem('Auth Key', result.user.accessToken)\r\n            navigate('/React-tailwind-blog/readBlogs')\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleRegister = () => {\r\n        if (email && password) {\r\n            signInWithEmailAndPassword(auth, email, password)\r\n                .then((userCredentials) => {\r\n                    localStorage.setItem('User Email', userCredentials.user.email)\r\n                    sessionStorage.setItem('Auth Key', userCredentials.user.accessToken)\r\n                    navigate('/React-tailwind-blog/readBlogs')\r\n                })\r\n                .catch((error) => {\r\n                    if (error.code === 'auth/user-not-found') {\r\n                        toast.error(\"User Not Found..\");\r\n                    }\r\n                    else if (error.code === 'auth/wrong-password') {\r\n                        toast.error(\"Please Enter your correct Password..\");\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.error(\"Please Enter the Credentials\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"card-centered\">\r\n            <ToastContainer />\r\n            <Card className=\"card-body\">\r\n                <Card.Content>\r\n                    <Card.Header>Sign In to get started..</Card.Header>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    <Feed>\r\n                        <Feed.Event>\r\n                            {/* <Feed.Label image='/images/avatar/small/jenny.jpg' /> */}\r\n                            <Feed.Content>\r\n                                <Form>\r\n                                    <Form.Field>\r\n                                        <label>Email</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            placeholder='Please Enter your Email'\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <Form.Field>\r\n                                        <label>Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            placeholder='Please Enter your Password'\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <div className=\"btn-centered\">\r\n                                        <button\r\n                                            onClick={handleRegister}\r\n                                            class=\"regiser-btn px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">\r\n                                            Sign in..\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => navigate('/React-tailwind-blog/register')}\r\n                                            class=\"login-btn px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">\r\n                                            Create your Account..\r\n                                        </button>\r\n                                    </div>\r\n                                    <Divider horizontal>Or</Divider>\r\n                                    <div className=\"google-btn\">\r\n                                        <GoogleButton\r\n                                           onClick={authWithGoogle}\r\n                                        />\r\n                                    </div>\r\n                                </Form>\r\n                            </Feed.Content>\r\n                        </Feed.Event>\r\n                    </Feed>\r\n                </Card.Content>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { app, database } from './firebase-config'\nimport { collection } from 'firebase/firestore'\nimport ReadBlogs from './Components/ReadBlogs';\nimport CreateBlogs from './Components/CreateBlogs';\nimport Register from './Components/Register';\nimport Login from './Components/Login';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nconst databaseRef = collection(database, 'react-blogs')\nfunction App() {\n  let navigate = useNavigate();\n  useEffect(() => {\n    navigate('/React-tailwind-blog/login')\n  }, [])\n  return (\n    <div className=\"main-body\">\n      <Routes>\n        <Route exact path='/React-tailwind-blog/register' element={<Register />} />\n        <Route exact path='/React-tailwind-blog/login' element={<Login />} />\n      </Routes>\n      <div className=\"blog-body\">\n        <Routes>\n          <Route exact path='/React-tailwind-blog/readBlogs' element={<ReadBlogs\n            databaseRef={databaseRef}\n          />} />\n          <Route exact path='/React-tailwind-blog/createBlogs' element={<CreateBlogs\n            databaseRef={databaseRef}\n          />} />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}