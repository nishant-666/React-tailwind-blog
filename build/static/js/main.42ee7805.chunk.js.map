{"version":3,"sources":["firebase-config.js","Components/Sidebar.js","assets/userImage.png","Components/Topbar.js","assets/NoDataImg.jpg","Components/NoData.js","Components/ReadBlogs.js","Components/CreateBlogs.js","Components/Register.js","Components/Login.js","Components/MyBlogs.js","Components/SavedBlogs.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getFirestore","Sidebar","navigate","useNavigate","className","to","onClick","localStorage","removeItem","sessionStorage","Topbar","useState","isTopMenu","setIsTopMenu","username","setUserName","userEmail","setUserEmail","photoURL","setPhotoURL","useEffect","getItem","Image","size","src","UserImage","avatar","NoData","NoDataImg","class","ReadBlogs","databaseRef","savedRef","blogs","setBlogs","dataLoading","setDataLoading","userName","setUsername","getBlogs","a","getDocs","docs","map","doc","data","id","length","Dimmer","active","Loader","indeterminate","blog","Popup","on","position","trigger","author","deleteDoc","then","toast","success","pauseOnHover","handleDelete","Icon","name","Divider","addDoc","title","privacy","tag","timestamp","banner","blogPost","handleSave","substring","inlineStyleRanges","style","text","countryOptions","key","value","CreateBlogs","setTitle","setTag","setBanner","loading","setLoading","file","setFile","setPrivacy","setBlogPost","userToken","Form","Field","placeholder","onChange","e","target","Select","options","outerText","getPrivacy","toolbarClassName","wrapperClassName","editorClassName","blocks","type","hidden","preventDefault","files","for","Button","primary","storage","getStorage","uploadedImageName","Math","random","toString","storageRef","ref","uploadTask","uploadBytesResumable","snapshot","error","getDownloadURL","downloadURL","moment","format","horizontal","window","scrollTo","Register","email","setEmail","password","setPassword","Card","Content","Header","Feed","Event","auth","getAuth","createUserWithEmailAndPassword","userCredentials","setItem","user","accessToken","catch","code","provider","GoogleAuthProvider","signInWithEmailAndPassword","signInWithPopup","result","displayName","err","console","log","MyBlogs","SavedBlogs","savedEmail","collection","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42ee7805.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBvE6lrJfKp4ufBf4aLpyj6VeQotmTj90M\",\r\n  authDomain: \"firegram-e4c96.firebaseapp.com\",\r\n  projectId: \"firegram-e4c96\",\r\n  storageBucket: \"firegram-e4c96.appspot.com\",\r\n  messagingSenderId: \"1039021562599\",\r\n  appId: \"1:1039021562599:web:77c4f8e7d3e0432ec12042\",\r\n  measurementId: \"G-W86ZHBCVM9\"\r\n};\r\n\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const database = getFirestore(app);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport './Sidebar.css';\r\nexport default function Sidebar() {\r\n    let navigate = useNavigate();\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div className=\"sidebar-main\">\r\n            <div className=\"sidebar-menu\">\r\n                <ul>\r\n                    <Link to={'/createBlogs'}>\r\n                        <li className='sidebar-lists'>Create Blogs</li>\r\n                    </Link>\r\n                    <Link to={'/readBlogs'}>\r\n                        <li className='sidebar-lists'>Public Blogs</li>\r\n                    </Link>\r\n                    <Link to={'/myBlogs'}>\r\n                        <li className='sidebar-lists'>My Blogs</li>\r\n                    </Link>\r\n                    <Link to={'/savedBlogs'}>\r\n                        <li className='sidebar-lists'>Saved Blogs</li>\r\n                    </Link>\r\n                    <li className='sidebar-lists' onClick={handleLogout}>Log out</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/userImage.5046265d.png\";","import React, { useEffect, useState } from 'react';\r\nimport UserImage from '../assets/userImage.png';\r\nimport { Image } from 'semantic-ui-react';\r\nexport default function Topbar() {\r\n  const [isTopMenu, setIsTopMenu] = useState(false)\r\n  const [username, setUserName] = useState('')\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [photoURL, setPhotoURL] = useState('')\r\n  useEffect(() => {\r\n    setUserName(localStorage.getItem('User Name'));\r\n    setUserEmail(localStorage.getItem('User Email'))\r\n    setPhotoURL(localStorage.getItem('PhotoURL'))\r\n  }, [])\r\n\r\n  const TopMenu = () => {\r\n    setIsTopMenu(!isTopMenu)\r\n  }\r\n  return (\r\n    <div className=\"right-float\">\r\n      <div className=\"topbar-container\">\r\n        <Image className=\"profile-image\" size=\"mini\" src={photoURL ? photoURL : UserImage} avatar onClick={TopMenu}/>\r\n        <p className=\"welcome-text\">Welcome, {username ? username : userEmail}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/NoDataImg.6ad77992.jpg\";","import React from 'react';\r\nimport NoDataImg from '../assets/NoDataImg.jpg';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function NoData() {\r\n    let navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div className=\"no-data-container\">\r\n            <img className=\"no-data-image\" src={NoDataImg} />\r\n            <p className=\"no-data-text\">No Blogs Found.. ☹️</p>\r\n            <button class=\"btn btn-green mt-3\" onClick={() => navigate('/createBlogs')}>\r\n                Write a Blog..\r\n            </button>\r\n\r\n            <div className=\"logout-mobile\">\r\n                <button class=\"btn btn-green mt-3\" onClick={handleLogout}>\r\n                    Log out\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDocs, doc, deleteDoc, addDoc } from 'firebase/firestore';\r\nimport Sidebar from './Sidebar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dimmer, Loader, Image, Popup, Divider, Icon } from 'semantic-ui-react';\r\nimport Topbar from './Topbar';\r\nimport NoData from './NoData';\r\nimport UserImage from '../assets/userImage.png';\r\nimport { database } from '../firebase-config';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nexport default function ReadBlogs({ databaseRef, savedRef }) {\r\n    let navigate = useNavigate();\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [dataLoading, setDataLoading] = useState(true);\r\n    const [userName, setUsername] = useState('')\r\n    const getBlogs = async () => {\r\n        const blogs = await getDocs(databaseRef);\r\n        setBlogs(blogs.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        setDataLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n        if (!userToken) {\r\n            navigate('/login')\r\n        }\r\n        else {\r\n            setUsername(localStorage.getItem('User Name'))\r\n            getBlogs();\r\n        }\r\n    }, [])\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/login')\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const data = doc(database, 'react-blogs', id);\r\n        deleteDoc(data)\r\n            .then(() => {\r\n                getBlogs()\r\n                toast.success(\"Data Deleted Successfully!\", {\r\n                    pauseOnHover: true\r\n                });\r\n            })\r\n    }\r\n\r\n    const handleSave = (blog) => {\r\n        addDoc(savedRef, {\r\n            userEmail: localStorage.getItem('User Email'),\r\n            title: blog.title,\r\n            privacy: blog.privacy,\r\n            tag: blog.tag,\r\n            avatar: blog.avatar,\r\n            timestamp: blog.timestamp,\r\n            author: blog.author,\r\n            banner: blog.banner,\r\n            blogPost: blog.blogPost\r\n        })\r\n            .then(() => {\r\n                toast.success(\"Blog Saved Successfully!\", {\r\n                    pauseOnHover: true\r\n                });\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"read-form-container mt-3 mb-2\">\r\n            <ToastContainer />\r\n            <Topbar />\r\n            <div className=\"sidebar-body\">\r\n                <Sidebar />\r\n            </div>\r\n            {blogs.length > 0 ? (\r\n                <div className=\"mobile-only\">\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/createBlogs')}>\r\n                            Create Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={handleLogout}>\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/savedBlogs')}>\r\n                            Saved Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={() => navigate('/myBlogs')}>\r\n                            My Blogs\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            {\r\n                dataLoading ? (\r\n                    <Dimmer active>\r\n                        <Loader indeterminate>Loading Blogs for you..</Loader>\r\n                    </Dimmer>\r\n                ) : (\r\n                    blogs.length > 0 ? (\r\n                        blogs.map((blog) => {\r\n                            return (\r\n                                <div class=\"blog-posts\">\r\n                                    <div class=\"blog-content\">\r\n                                        <div className=\"three-dots\">\r\n                                            <Popup\r\n                                                className=\"popup\"\r\n                                                on='click'\r\n                                                position='bottom right'\r\n                                                trigger={<BsThreeDotsVertical size=\"1.5rem\" />}\r\n                                            >\r\n                                                <div className=\"popup-container\">\r\n                                                    {blog.author === userName ? (\r\n                                                        <div>\r\n                                                            <p className=\"delete-blog\" onClick={() => handleDelete(blog.id)}>\r\n                                                                <Icon size=\"large\" name=\"trash\" />\r\n                                                                Delete Post\r\n                                                            </p>\r\n                                                            <Divider />\r\n                                                        </div>\r\n                                                    ) : (\r\n                                                        \"\"\r\n                                                    )}\r\n                                                    <p className=\"delete-blog\" onClick={() => handleSave(blog)}>\r\n                                                        <Icon size=\"large\" name=\"save\" />\r\n                                                        Save this Post\r\n                                                    </p>\r\n                                                </div>\r\n                                            </Popup>\r\n                                        </div>\r\n                                        <div className=\"blog-main\">\r\n                                            <div>\r\n                                                <p class=\"blog-timestamp\">{blog.timestamp} / <span className=\"tags-container\">{blog.tag}</span></p>\r\n                                                <p class=\"blog-title\">{blog.title}</p>\r\n                                                <div className=\"author-container\">\r\n                                                    <Image className=\"avatar-img\" size=\"mini\" src={blog.avatar ? blog.avatar : UserImage} avatar />\r\n                                                    <p class=\"author-name\">{blog.author.substring(0,21)}</p>\r\n                                                </div>\r\n                                                <p class=\"blog-post\">\r\n                                                    {blog.blogPost.map((blogPost) => {\r\n                                                        return (\r\n                                                            <p>\r\n                                                                {blogPost.inlineStyleRanges.length > 0 ?\r\n                                                                    blogPost.inlineStyleRanges[0].style === 'BOLD' ?\r\n                                                                        <p className=\"text-bold\">{blogPost.text}</p> :\r\n                                                                        blogPost.inlineStyleRanges[0].style === 'ITALIC' ?\r\n                                                                            <p className=\"italic-text\">{blogPost.text}</p> :\r\n                                                                            blogPost.inlineStyleRanges[0].style === 'UNDERLINE' ?\r\n                                                                                <p className=\"underlined-text\">{blogPost.text}</p> : <p>{blogPost.text}</p>\r\n                                                                    : <p>{blogPost.text}</p>\r\n                                                                }\r\n                                                            </p>\r\n                                                        )\r\n                                                    })}\r\n                                                </p>\r\n                                            </div>\r\n                                            {/* <div className=\"banner-container\">\r\n                                                <Image  src={blog.banner} className=\"banner-image\" />\r\n                                            </div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <NoData />\r\n                    )\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Select, Button, Icon, Divider } from 'semantic-ui-react';\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { addDoc } from 'firebase/firestore';\r\nimport Sidebar from './Sidebar';\r\nimport Topbar from './Topbar';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport moment from 'moment'\r\nconst countryOptions = [\r\n    { key: 'private', value: 'private', text: 'Private' },\r\n    { key: 'public', value: 'public', text: 'Public' },\r\n]\r\n\r\nexport default function CreateBlogs({ databaseRef }) {\r\n    let navigate = useNavigate();\r\n    const [title, setTitle] = useState('');\r\n    const [tag, setTag] = useState('');\r\n    const [banner, setBanner] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [file, setFile] = useState({});\r\n    const [privacy, setPrivacy] = useState(null);\r\n    const [blogPost, setBlogPost] = useState([]);\r\n    const [username, setUserName] = useState('')\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const getPrivacy = (e) => {\r\n        setPrivacy(e.target.outerText)\r\n    }\r\n    const BlogBodyChange = (blog) => {\r\n        setBlogPost(blog.blocks)\r\n    }\r\n\r\n    const submitBlogs = () => {\r\n        if (title && privacy && blogPost) {\r\n            addDoc(databaseRef, {\r\n                title: title,\r\n                privacy: privacy,\r\n                tag: tag,\r\n                avatar: localStorage.getItem('PhotoURL'),\r\n                timestamp: moment().format('LL'),\r\n                author: username ? username : userEmail,\r\n                banner: banner,\r\n                blogPost: blogPost\r\n            })\r\n                .then(() => {\r\n                    navigate('/readBlogs')\r\n                })\r\n        }\r\n        else {\r\n            toast.error(\"Please fill all the fields...\");\r\n        }\r\n    }\r\n\r\n    const selectFile = (e) => {\r\n        e.preventDefault();\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const uploadFile = () => {\r\n        const storage = getStorage();\r\n        let uploadedImageName = (Math.random() + 1).toString(36).substring(7);\r\n        const storageRef = ref(storage, uploadedImageName);\r\n        const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n        uploadTask.on('state_changed',\r\n            (snapshot) => {\r\n                setLoading(true)\r\n            },\r\n            (error) => {\r\n                // Handle unsuccessful uploads\r\n            },\r\n            () => {\r\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                    setLoading(false)\r\n                    setBanner(downloadURL)\r\n                    toast.success(\"Banner Added\");\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key');\r\n        setUserName(localStorage.getItem('User Name'));\r\n        setUserEmail(localStorage.getItem('User Email'))\r\n        if (!userToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    const readBlogs = () => {\r\n        window.scrollTo(0, 0)\r\n        navigate('/readBlogs')\r\n    }\r\n    return (\r\n        <div className=\"create-form-container\">\r\n            <Topbar />\r\n            <p className=\"blog-text\">Create a Blog..</p>\r\n            <ToastContainer />\r\n            <div className=\"sidebar-body\">\r\n                <Sidebar />\r\n            </div>\r\n            <Form>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Title</label>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        placeholder='Please Enter the Title'\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Privacy</label>\r\n                    <Select\r\n                        className=\"form-input\"\r\n                        placeholder='Select the Privacy'\r\n                        options={countryOptions}\r\n                        onChange={(e) => getPrivacy(e)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field className=\"form-field\">\r\n                    <label className=\"form-label\">Content</label>\r\n                    <Editor\r\n                        // editorState={editorState}\r\n                        toolbarClassName=\"toolbarClassName\"\r\n                        wrapperClassName=\"wrapperClassName\"\r\n                        editorClassName=\"editorClassName\"\r\n                        onChange={BlogBodyChange}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Tags</label>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        placeholder='Please Enter the Tags'\r\n                        value={tag}\r\n                        onChange={(e) => setTag(e.target.value)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Banner Image</label>\r\n                    <input type=\"file\" id=\"actual-btn\" hidden onChange={selectFile} />\r\n                    <div className=\"flex-inline\">\r\n                        <label for=\"actual-btn\" className=\"file-label\">\r\n                            {file.name ? file.name : 'Choose Banner Image'}\r\n                        </label>\r\n                        <Button\r\n                            loading={loading ? true : false}\r\n                            primary\r\n                            className=\"upload-button\"\r\n                            onClick={uploadFile}>\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Form.Field>\r\n\r\n                {/* <Form.Field>\r\n                    <label className=\"form-label\">Author</label>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        placeholder='Please Enter the Author Name'\r\n                        onChange={(e) => setAuthor(e.target.value)}\r\n                    />\r\n                </Form.Field> */}\r\n                <div className=\"btn-container\">\r\n                    <button class=\"btn btn-green\" onClick={submitBlogs}>\r\n                        Submit your Blog\r\n                    </button>\r\n                </div>\r\n                <div className=\"mobile-only pb-5\">\r\n                    <Divider horizontal>Or</Divider>\r\n                    <p className=\"read-blogs-text\">Don't want to write..</p>\r\n                    <button class=\"btn btn-green btn-block\" onClick={readBlogs}>\r\n                        Read Blogs\r\n                    </button>\r\n                    <button class=\"btn btn-green btn-block blogs-btn\" onClick={() => navigate('/myBlogs')}>\r\n                        My Blogs\r\n                    </button>\r\n                    <button class=\"btn btn-green btn-block blogs-btn\" onClick={() => navigate('/savedBlogs')}>\r\n                        Saved Blogs\r\n                    </button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Feed, Form } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nexport default function Register() {\r\n    let navigate = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n\r\n        if (userToken) {\r\n            navigate('/readBlogs')\r\n        }\r\n    }, [])\r\n\r\n    const handleRegister = () => {\r\n        if (email && password) {\r\n            let auth = getAuth();\r\n\r\n            createUserWithEmailAndPassword(auth, email, password)\r\n                .then((userCredentials) => {\r\n                    localStorage.setItem('User Email', userCredentials.user.email)\r\n                    sessionStorage.setItem('Auth Key', userCredentials.user.accessToken)\r\n                    navigate('/readBlogs')\r\n                })\r\n                .catch((error) => {\r\n                    if (error.code === 'auth/email-already-in-use') {\r\n                        toast.error(\"Email already Exists..\");\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.error(\"Please Enter the Credentials\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"card-centered\">\r\n            <ToastContainer />\r\n            <Card className=\"card-body\">\r\n                <Card.Content>\r\n                    <Card.Header>Create your account to get started..</Card.Header>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    <Feed>\r\n                        <Feed.Event>\r\n                            {/* <Feed.Label image='/images/avatar/small/jenny.jpg' /> */}\r\n                            <Feed.Content>\r\n                                <Form>\r\n                                    <Form.Field>\r\n                                        <label>Email</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            placeholder='Please Enter your Email'\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <Form.Field>\r\n                                        <label>Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            placeholder='Please Enter your Password'\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <div className=\"btn-centered\">\r\n                                        <button\r\n                                            onClick={handleRegister}\r\n                                            class=\"regiser-btn px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">\r\n                                            Create your account..\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => navigate('/login')}\r\n                                            class=\"login-btn px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">\r\n                                            Login\r\n                                        </button>\r\n                                    </div>\r\n                                </Form>\r\n                            </Feed.Content>\r\n                        </Feed.Event>\r\n                    </Feed>\r\n                </Card.Content>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Feed, Form, Divider } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { getAuth, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport GoogleButton from 'react-google-button'\r\nexport default function Register() {\r\n    let navigate = useNavigate();\r\n    const provider = new GoogleAuthProvider();\r\n    const auth = getAuth();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n\r\n        if (userToken) {\r\n            navigate('/readBlogs')\r\n        }\r\n    }, [])\r\n\r\n    const authWithGoogle = () => {\r\n        signInWithPopup(auth, provider)\r\n        .then((result) => {\r\n            localStorage.setItem('PhotoURL', result.user.photoURL)\r\n            localStorage.setItem('User Name', result.user.displayName);\r\n            localStorage.setItem('User Email', result.user.email);\r\n            sessionStorage.setItem('Auth Key', result.user.accessToken)\r\n            navigate('/readBlogs')\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleRegister = () => {\r\n        if (email && password) {\r\n            signInWithEmailAndPassword(auth, email, password)\r\n                .then((userCredentials) => {\r\n                    localStorage.setItem('User Email', userCredentials.user.email)\r\n                    sessionStorage.setItem('Auth Key', userCredentials.user.accessToken)\r\n                    navigate('/readBlogs')\r\n                })\r\n                .catch((error) => {\r\n                    if (error.code === 'auth/user-not-found') {\r\n                        toast.error(\"User Not Found..\");\r\n                    }\r\n                    else if (error.code === 'auth/wrong-password') {\r\n                        toast.error(\"Please Enter your correct Password..\");\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.error(\"Please Enter the Credentials\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"card-centered\">\r\n            <ToastContainer />\r\n            <Card className=\"card-body\">\r\n                <Card.Content>\r\n                    <Card.Header>Sign In to get started..</Card.Header>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    <Feed>\r\n                        <Feed.Event>\r\n                            {/* <Feed.Label image='/images/avatar/small/jenny.jpg' /> */}\r\n                            <Feed.Content>\r\n                                <Form>\r\n                                    <Form.Field>\r\n                                        <label>Email</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            placeholder='Please Enter your Email'\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <Form.Field>\r\n                                        <label>Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            placeholder='Please Enter your Password'\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <div className=\"btn-centered\">\r\n                                        <button\r\n                                            onClick={handleRegister}\r\n                                            class=\"regiser-btn px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">\r\n                                            Sign in..\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => navigate('/register')}\r\n                                            class=\"login-btn px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">\r\n                                            Create your Account..\r\n                                        </button>\r\n                                    </div>\r\n                                    <Divider horizontal>Or</Divider>\r\n                                    <div className=\"google-btn\">\r\n                                        <GoogleButton\r\n                                           onClick={authWithGoogle}\r\n                                        />\r\n                                    </div>\r\n                                </Form>\r\n                            </Feed.Content>\r\n                        </Feed.Event>\r\n                    </Feed>\r\n                </Card.Content>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDocs, doc, deleteDoc } from 'firebase/firestore';\r\nimport Sidebar from './Sidebar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dimmer, Loader, Image, Popup, Button, Icon } from 'semantic-ui-react';\r\nimport Topbar from './Topbar';\r\nimport NoData from './NoData';\r\nimport UserImage from '../assets/userImage.png';\r\nimport { database } from '../firebase-config';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nexport default function MyBlogs({ databaseRef }) {\r\n    let navigate = useNavigate();\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [dataLoading, setDataLoading] = useState(true);\r\n    const [userName, setUsername] = useState('')\r\n    const [photoURL, setPhotoURL] = useState('');\r\n    const getBlogs = async () => {\r\n        const blogs = await getDocs(databaseRef);\r\n        setBlogs(blogs.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        setDataLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n        if (!userToken) {\r\n            navigate('/login')\r\n        }\r\n        else {\r\n            setUsername(localStorage.getItem('User Name'))\r\n            getBlogs();\r\n            setPhotoURL(localStorage.getItem('PhotoURL'))\r\n        }\r\n    }, [])\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/login')\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const data = doc(database, 'react-blogs', id);\r\n        deleteDoc(data)\r\n            .then(() => {\r\n                getBlogs()\r\n                toast.success(\"Data Deleted Successfully!\", {\r\n                    pauseOnHover: true\r\n                });\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"read-form-container mt-3 mb-2\">\r\n            <ToastContainer />\r\n            <Topbar />\r\n            <div className=\"sidebar-body\">\r\n                <Sidebar />\r\n            </div>\r\n            {blogs.length > 0 ? (\r\n                <div className=\"mobile-only\">\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/createBlogs')}>\r\n                            Create Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={handleLogout}>\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/savedBlogs')}>\r\n                            Saved Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={() => navigate('/myBlogs')}>\r\n                            My Blogs\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <NoData />\r\n            )}\r\n            {dataLoading ? (\r\n                <Dimmer active>\r\n                    <Loader indeterminate>Loading Blogs for you..</Loader>\r\n                </Dimmer>\r\n            ) : (\r\n                blogs.length > 0 ? (\r\n                    blogs.map((blog) => {\r\n                        return (\r\n                            blog.author === userName ? (\r\n                                <div class=\"blog-posts\">\r\n                                    <div class=\"blog-content\">\r\n                                        <div className=\"three-dots\">\r\n                                            <Popup\r\n                                                on='click'\r\n                                                position='bottom right'\r\n                                                trigger={<BsThreeDotsVertical size=\"1.5rem\" />}\r\n                                            >\r\n                                                <div className=\"popup-container\">\r\n                                                    <p className=\"delete-blog\" onClick={() => handleDelete(blog.id)}>\r\n                                                        <Icon size=\"large\" name=\"trash\" />\r\n                                                        Delete Post\r\n                                                    </p>\r\n                                                </div>\r\n                                            </Popup>\r\n                                        </div>\r\n                                        {/* <div className=\"banner-container\">\r\n                                                <Image src={blog.banner} className=\"banner-image\" />\r\n                                            </div> */}\r\n                                        <p class=\"blog-timestamp\">{blog.timestamp} / <span className=\"tags-container\">{blog.tag}</span></p>\r\n                                        <p class=\"blog-title\">{blog.title}</p>\r\n                                        <div className=\"author-container\">\r\n                                            <Image\r\n                                                className=\"avatar-img\"\r\n                                                size=\"mini\"\r\n                                                src={blog.avatar ? blog.avatar : UserImage}\r\n                                                avatar />\r\n                                            <p class=\"author-name\">{blog.author.substring(0, 21)}</p>\r\n                                        </div>\r\n                                        <p class=\"blog-post\">\r\n                                            {blog.blogPost.map((blogPost) => {\r\n                                                return (\r\n                                                    <p>\r\n                                                        {blogPost.inlineStyleRanges.length > 0 ?\r\n                                                            blogPost.inlineStyleRanges[0].style === 'BOLD' ?\r\n                                                                <p className=\"text-bold\">{blogPost.text}</p> :\r\n                                                                blogPost.inlineStyleRanges[0].style === 'ITALIC' ?\r\n                                                                    <p className=\"italic-text\">{blogPost.text}</p> :\r\n                                                                    blogPost.inlineStyleRanges[0].style === 'UNDERLINE' ?\r\n                                                                        <p className=\"underlined-text\">{blogPost.text}</p> : <p>{blogPost.text}</p>\r\n                                                            : <p>{blogPost.text}</p>\r\n                                                        }\r\n                                                    </p>\r\n                                                )\r\n                                            })}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )\r\n                        )\r\n                    })\r\n                ) : (\r\n                    <NoData />\r\n                )\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDocs, doc, deleteDoc } from 'firebase/firestore';\r\nimport Sidebar from './Sidebar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dimmer, Loader, Image, Popup, Button, Icon } from 'semantic-ui-react';\r\nimport Topbar from './Topbar';\r\nimport NoData from './NoData';\r\nimport UserImage from '../assets/userImage.png';\r\nimport { database } from '../firebase-config';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nexport default function SavedBlogs({ savedRef }) {\r\n    let navigate = useNavigate();\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [dataLoading, setDataLoading] = useState(true);\r\n    const [savedEmail, setEmail] = useState('')\r\n    const [photoURL, setPhotoURL] = useState('');\r\n    const getBlogs = async () => {\r\n        const blogs = await getDocs(savedRef);\r\n        setBlogs(blogs.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        setDataLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n        if (!userToken) {\r\n            navigate('/login')\r\n        }\r\n        else {\r\n            setEmail(localStorage.getItem('User Email'))\r\n            getBlogs();\r\n            setPhotoURL(localStorage.getItem('PhotoURL'))\r\n        }\r\n    }, [])\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/login')\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const data = doc(database, 'saved-blogs', id);\r\n        deleteDoc(data)\r\n            .then(() => {\r\n                getBlogs()\r\n                toast.success(\"Data Deleted Successfully!\", {\r\n                    pauseOnHover: true\r\n                });\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"read-form-container mt-3 mb-2\">\r\n            <ToastContainer />\r\n            <Topbar />\r\n            <div className=\"sidebar-body\">\r\n                <Sidebar />\r\n            </div>\r\n            {blogs.length > 0 ? (\r\n                <div className=\"mobile-only\">\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/createBlogs')}>\r\n                            Create Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={handleLogout}>\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/savedBlogs')}>\r\n                            Saved Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={() => navigate('/myBlogs')}>\r\n                            My Blogs\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            {\r\n                dataLoading ? (\r\n                    <Dimmer active>\r\n                        <Loader indeterminate>Loading Blogs for you..</Loader>\r\n                    </Dimmer>\r\n                ) : (\r\n                    blogs.length > 0 ? (\r\n                        blogs.map((blog) => {\r\n                            return (\r\n                                blog.userEmail === savedEmail ? (\r\n                                    <div class=\"blog-posts\">\r\n                                        <div class=\"blog-content\">\r\n                                            <div className=\"three-dots\">\r\n                                                <Popup\r\n                                                    on='click'\r\n                                                    position='bottom right'\r\n                                                    trigger={<BsThreeDotsVertical size=\"1.5rem\" />}\r\n                                                >\r\n                                                    <div className=\"popup-container\">\r\n                                                        <p className=\"delete-blog\" onClick={() => handleDelete(blog.id)}>\r\n                                                            <Icon size=\"large\" name=\"trash\" />\r\n                                                            Delete Post\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            </div>\r\n                                            {/* <div className=\"banner-container\">\r\n                                                <Image src={blog.banner} className=\"banner-image\" />\r\n                                            </div> */}\r\n                                            <p class=\"blog-timestamp\">{blog.timestamp} / <span className=\"tags-container\">{blog.tag}</span></p>\r\n                                            <p class=\"blog-title\">{blog.title}</p>\r\n                                            <div className=\"author-container\">\r\n                                                <Image className=\"avatar-img\" size=\"mini\" src={blog.avatar ? blog.avatar : UserImage} avatar />\r\n                                                <p class=\"author-name\">{blog.author.substring(0, 21)}</p>\r\n                                            </div>\r\n                                            <p class=\"blog-post\">\r\n                                                {blog.blogPost.map((blogPost) => {\r\n                                                    return (\r\n                                                        <p>\r\n                                                            {blogPost.inlineStyleRanges.length > 0 ?\r\n                                                                blogPost.inlineStyleRanges[0].style === 'BOLD' ?\r\n                                                                    <p className=\"text-bold\">{blogPost.text}</p> :\r\n                                                                    blogPost.inlineStyleRanges[0].style === 'ITALIC' ?\r\n                                                                        <p className=\"italic-text\">{blogPost.text}</p> :\r\n                                                                        blogPost.inlineStyleRanges[0].style === 'UNDERLINE' ?\r\n                                                                            <p className=\"underlined-text\">{blogPost.text}</p> : <p>{blogPost.text}</p>\r\n                                                                : <p>{blogPost.text}</p>\r\n                                                            }\r\n                                                        </p>\r\n                                                    )\r\n                                                })}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    \"\"\r\n                                )\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <NoData />\r\n                    )\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { app, database } from './firebase-config'\nimport { collection } from 'firebase/firestore'\nimport ReadBlogs from './Components/ReadBlogs';\nimport CreateBlogs from './Components/CreateBlogs';\nimport Register from './Components/Register';\nimport Login from './Components/Login';\nimport MyBlogs from './Components/MyBlogs';\nimport SavedBlogs from './Components/SavedBlogs';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nconst databaseRef = collection(database, 'react-blogs');\nconst savedRef = collection(database, 'saved-blogs');\nfunction App() {\n  let navigate = useNavigate();\n  useEffect(() => {\n    navigate('/login')\n  }, [])\n  return (\n    <div className=\"main-body\">\n      <Routes>\n        <Route exact path='/register' element={<Register />} />\n        <Route exact path='/login' element={<Login />} />\n      </Routes>\n      <div className=\"blog-body\">\n        <Routes>\n          <Route exact path='/myBlogs' element={<MyBlogs\n            databaseRef={databaseRef}\n          />} />\n          <Route exact path='/readBlogs' element={<ReadBlogs\n            databaseRef={databaseRef} savedRef={savedRef}\n          />} />\n          <Route exact path='/createBlogs' element={<CreateBlogs\n            databaseRef={databaseRef}\n          />} />\n          <Route exact path='/savedBlogs' element={<SavedBlogs\n            databaseRef={databaseRef} savedRef={savedRef}\n          />} />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}