{"version":3,"sources":["firebase-config.js","Components/Sidebar.js","assets/userImage.png","Components/Topbar.js","assets/NoDataImg.jpg","Components/NoData.js","Components/ReadBlogs.js","Components/QuillToolbar.js","Components/CreateBlogs.js","Components/Login.js","Components/MyBlogs.js","Components/SavedBlogs.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getFirestore","Sidebar","navigate","useNavigate","className","to","onClick","localStorage","removeItem","sessionStorage","Topbar","useState","username","setUserName","userEmail","setUserEmail","photoURL","setPhotoURL","useEffect","getItem","Image","size","src","UserImage","avatar","NoData","NoDataImg","class","ReadBlogs","databaseRef","savedRef","blogs","setBlogs","dataLoading","setDataLoading","setUsername","setEmail","getBlogs","a","getDocs","docs","map","doc","data","id","length","Dimmer","active","Loader","indeterminate","blog","Popup","on","position","trigger","state","blogData","Icon","name","Divider","deleteDoc","then","toast","success","pauseOnHover","handleDelete","addDoc","title","privacy","tag","timestamp","author","banner","blogPost","handleSave","substring","dangerouslySetInnerHTML","__html","href","target","CustomUndo","viewBox","points","d","CustomRedo","Size","Quill","import","whitelist","register","Font","modules","toolbar","container","handlers","undo","this","quill","history","redo","delay","maxStack","userOnly","formats","QuillToolbar","defaultValue","value","countryOptions","key","text","CreateBlogs","useLocation","setTitle","setTag","setBanner","loading","setLoading","file","setFile","setPrivacy","setBlogPost","React","userToken","Form","Field","placeholder","onChange","e","Select","options","outerText","getPrivacy","theme","type","hidden","preventDefault","files","for","Button","primary","storage","getStorage","uploadedImageName","Math","random","toString","storageRef","ref","uploadTask","uploadBytesResumable","snapshot","error","getDownloadURL","downloadURL","collectionById","updateDoc","moment","format","horizontal","window","scrollTo","Register","provider","GoogleAuthProvider","auth","getAuth","Card","Content","Feed","Event","signInWithPopup","result","setItem","user","displayName","email","accessToken","catch","err","console","log","MyBlogs","savedEmail","SavedBlogs","collection","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dfb3008.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBvE6lrJfKp4ufBf4aLpyj6VeQotmTj90M\",\r\n  authDomain: \"firegram-e4c96.firebaseapp.com\",\r\n  projectId: \"firegram-e4c96\",\r\n  storageBucket: \"firegram-e4c96.appspot.com\",\r\n  messagingSenderId: \"1039021562599\",\r\n  appId: \"1:1039021562599:web:77c4f8e7d3e0432ec12042\",\r\n  measurementId: \"G-W86ZHBCVM9\"\r\n};\r\n\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const database = getFirestore(app);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport './Sidebar.css';\r\nexport default function Sidebar() {\r\n    let navigate = useNavigate();\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div className=\"sidebar-main\">\r\n            <div className=\"sidebar-menu\">\r\n                <ul>\r\n                    <Link to={'/createBlogs'}>\r\n                        <li className='sidebar-lists'>Write a Blog</li>\r\n                    </Link>\r\n                    <Link to={'/readBlogs'}>\r\n                        <li className='sidebar-lists'>Public Blogs</li>\r\n                    </Link>\r\n                    <Link to={'/myBlogs'}>\r\n                        <li className='sidebar-lists'>My Blogs</li>\r\n                    </Link>\r\n                    <Link to={'/savedBlogs'}>\r\n                        <li className='sidebar-lists'>Saved Blogs</li>\r\n                    </Link>\r\n                    <li className='sidebar-lists' onClick={handleLogout}>Log out</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/userImage.5046265d.png\";","import React, { useEffect, useState } from 'react';\r\nimport UserImage from '../assets/userImage.png';\r\nimport { Image } from 'semantic-ui-react';\r\nexport default function Topbar() {\r\n  const [username, setUserName] = useState('')\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [photoURL, setPhotoURL] = useState('')\r\n  useEffect(() => {\r\n    setUserName(localStorage.getItem('User Name'));\r\n    setUserEmail(localStorage.getItem('User Email'))\r\n    setPhotoURL(localStorage.getItem('PhotoURL'))\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"right-float\">\r\n      <div className=\"topbar-container\">\r\n        <Image className=\"profile-image\" size=\"mini\" src={photoURL ? photoURL : UserImage} avatar/>\r\n        <p className=\"welcome-text\">Welcome, {username ? username : userEmail}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/NoDataImg.6ad77992.jpg\";","import React from 'react';\r\nimport NoDataImg from '../assets/NoDataImg.jpg';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function NoData() {\r\n    let navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div className=\"no-data-container\">\r\n            <img className=\"no-data-image\" src={NoDataImg} />\r\n            <p className=\"no-data-text\">No Blogs Found.. ☹️</p>\r\n            {/* <button class=\"btn btn-green mt-3\" onClick={() => navigate('/createBlogs')}>\r\n                Write a Blog..\r\n            </button> */}\r\n\r\n            <div className=\"logout-mobile\">\r\n                <button class=\"btn btn-green mt-3\" onClick={handleLogout}>\r\n                    Log out\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDocs, doc, deleteDoc, addDoc } from 'firebase/firestore';\r\nimport Sidebar from './Sidebar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dimmer, Loader, Image, Popup, Divider, Icon } from 'semantic-ui-react';\r\nimport Topbar from './Topbar';\r\nimport NoData from './NoData';\r\nimport UserImage from '../assets/userImage.png';\r\nimport { database } from '../firebase-config';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nexport default function ReadBlogs({ databaseRef, savedRef }) {\r\n    let navigate = useNavigate();\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [dataLoading, setDataLoading] = useState(true);\r\n    const [userName, setUsername] = useState('');\r\n    const [userEmail, setEmail] = useState('')\r\n    const getBlogs = async () => {\r\n        const blogs = await getDocs(databaseRef);\r\n        setBlogs(blogs.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        setDataLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n        if (!userToken) {\r\n            navigate('/login')\r\n        }\r\n        else {\r\n            setUsername(localStorage.getItem('User Name'))\r\n            setEmail(localStorage.getItem('User Email'))\r\n            getBlogs();\r\n        }\r\n    }, [])\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/login')\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const data = doc(database, 'react-blogs', id);\r\n        deleteDoc(data)\r\n            .then(() => {\r\n                getBlogs()\r\n                toast.success(\"Data Deleted Successfully!\", {\r\n                    pauseOnHover: true\r\n                });\r\n            })\r\n    }\r\n\r\n    const handleEdit = (data) => {\r\n        navigate('/createBlogs', {\r\n            state: {\r\n                blogData: data,\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSave = (blog) => {\r\n        addDoc(savedRef, {\r\n            userEmail: localStorage.getItem('User Email'),\r\n            title: blog.title,\r\n            privacy: blog.privacy,\r\n            tag: blog.tag,\r\n            avatar: blog.avatar,\r\n            timestamp: blog.timestamp,\r\n            author: blog.author,\r\n            banner: blog.banner,\r\n            blogPost: blog.blogPost\r\n        })\r\n            .then(() => {\r\n                toast.success(\"Blog Saved Successfully!\", {\r\n                    pauseOnHover: true\r\n                });\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"read-form-container mt-3 mb-2\">\r\n            <ToastContainer />\r\n            <Topbar />\r\n            <div className=\"sidebar-body\">\r\n                <Sidebar />\r\n            </div>\r\n            {blogs.length > 0 ? (\r\n                <div className=\"mobile-only\">\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/createBlogs')}>\r\n                            Create Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={handleLogout}>\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/savedBlogs')}>\r\n                            Saved Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={() => navigate('/myBlogs')}>\r\n                            My Blogs\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            {\r\n                dataLoading ? (\r\n                    <Dimmer active>\r\n                        <Loader indeterminate>Loading Blogs for you..</Loader>\r\n                    </Dimmer>\r\n                ) : (\r\n                    blogs.length > 0 ? (\r\n                        blogs.map((blog) => {\r\n                            return (\r\n                                <div class=\"blog-posts\">\r\n                                    <div class=\"blog-content\">\r\n                                        <div className=\"three-dots\">\r\n                                            <Popup\r\n                                                className=\"popup\"\r\n                                                on='click'\r\n                                                position='bottom right'\r\n                                                trigger={<BsThreeDotsVertical size=\"1.5rem\" />}\r\n                                            >\r\n                                                <div className=\"popup-container\">\r\n                                                    {blog.userEmail === userEmail ? (\r\n                                                        <div>\r\n                                                            <p className=\"delete-blog\" onClick={() => handleEdit(blog)}>\r\n                                                                <Icon size=\"large\" name=\"edit\" />\r\n                                                                Edit Post\r\n                                                            </p>\r\n                                                            <Divider />\r\n                                                            <p className=\"delete-blog\" onClick={() => handleDelete(blog.id)}>\r\n                                                                <Icon size=\"large\" name=\"trash\" />\r\n                                                                Delete Post\r\n                                                            </p>\r\n                                                            <Divider />\r\n                                                        </div>\r\n                                                    ) : (\r\n                                                        \"\"\r\n                                                    )}\r\n                                                    <p className=\"delete-blog\" onClick={() => handleSave(blog)}>\r\n                                                        <Icon size=\"large\" name=\"save\" />\r\n                                                        Save this Post\r\n                                                    </p>\r\n                                                </div>\r\n                                            </Popup>\r\n                                        </div>\r\n                                        <div className=\"blog-main\">\r\n                                            <div>\r\n                                                <p class=\"blog-timestamp\">{blog.timestamp} / <span className=\"tags-container\">{blog.tag}</span></p>\r\n                                                <p class=\"blog-title\">{blog.title}</p>\r\n                                                <div className=\"author-container\">\r\n                                                    <Image className=\"avatar-img\" size=\"mini\" src={blog.avatar ? blog.avatar : UserImage} avatar />\r\n                                                    <p class=\"author-name\">{blog.author.substring(0, 21)}</p>\r\n                                                </div>\r\n                                                <p class=\"blog-post\">\r\n                                                    <div dangerouslySetInnerHTML={{ __html: `${blog.blogPost.substring(0, 200)}..` }}></div>\r\n                                                </p>\r\n\r\n                                                <div className='readMore'>\r\n                                                    <a href={`https://single-blogs.web.app/read/${blog.id}`} target=\"_blank\">Read More...</a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <NoData />\r\n                    )\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Quill } from \"react-quill\";\r\n\r\n// Custom Undo button icon component for Quill editor. You can import it directly\r\n// from 'quill/assets/icons/undo.svg' but I found that a number of loaders do not\r\n// handle them correctly\r\nconst CustomUndo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Redo button icon component for Quill editor\r\nconst CustomRedo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Undo and redo functions for Custom Toolbar\r\nfunction undoChange() {\r\n  this.quill.history.undo();\r\n}\r\nfunction redoChange() {\r\n  this.quill.history.redo();\r\n}\r\n\r\n// Add sizes to whitelist and register them\r\nconst Size = Quill.import(\"formats/size\");\r\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\r\nQuill.register(Size, true);\r\n\r\n// Add fonts to whitelist and register them\r\nconst Font = Quill.import(\"formats/font\");\r\nFont.whitelist = [\r\n  \"arial\",\r\n  \"comic-sans\",\r\n  \"courier-new\",\r\n  \"georgia\",\r\n  \"helvetica\",\r\n  \"lucida\"\r\n];\r\nQuill.register(Font, true);\r\n\r\n// Modules object for setting up the Quill editor\r\nexport const modules = {\r\n  toolbar: {\r\n    container: \"#toolbar\",\r\n    handlers: {\r\n      undo: undoChange,\r\n      redo: redoChange\r\n    }\r\n  },\r\n  history: {\r\n    delay: 500,\r\n    maxStack: 100,\r\n    userOnly: true\r\n  }\r\n};\r\n\r\n// Formats objects for setting up the Quill editor\r\nexport const formats = [\r\n  \"header\",\r\n  \"font\",\r\n  \"size\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"align\",\r\n  \"strike\",\r\n  \"script\",\r\n  \"blockquote\",\r\n  \"background\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n  \"color\",\r\n  \"code-block\"\r\n];\r\n\r\n// Quill Toolbar component\r\nexport const QuillToolbar = () => (\r\n  <div id=\"toolbar\">\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-font\" defaultValue=\"arial\">\r\n        <option value=\"arial\">Arial</option>\r\n        <option value=\"comic-sans\">Comic Sans</option>\r\n        <option value=\"courier-new\">Courier New</option>\r\n        <option value=\"georgia\">Georgia</option>\r\n        <option value=\"helvetica\">Helvetica</option>\r\n        <option value=\"lucida\">Lucida</option>\r\n      </select>\r\n      <select className=\"ql-size\" defaultValue=\"medium\">\r\n        <option value=\"extra-small\">Size 1</option>\r\n        <option value=\"small\">Size 2</option>\r\n        <option value=\"medium\">Size 3</option>\r\n        <option value=\"large\">Size 4</option>\r\n      </select>\r\n      <select className=\"ql-header\" defaultValue=\"3\">\r\n        <option value=\"1\">Heading</option>\r\n        <option value=\"2\">Subheading</option>\r\n        <option value=\"3\">Normal</option>\r\n      </select>\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-bold\" />\r\n      <button className=\"ql-italic\" />\r\n      <button className=\"ql-underline\" />\r\n      <button className=\"ql-strike\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-list\" value=\"ordered\" />\r\n      <button className=\"ql-list\" value=\"bullet\" />\r\n      <button className=\"ql-indent\" value=\"-1\" />\r\n      <button className=\"ql-indent\" value=\"+1\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-script\" value=\"super\" />\r\n      <button className=\"ql-script\" value=\"sub\" />\r\n      <button className=\"ql-blockquote\" />\r\n      <button className=\"ql-direction\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-align\" />\r\n      <select className=\"ql-color\" />\r\n      <select className=\"ql-background\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-link\" />\r\n      <button className=\"ql-image\" />\r\n      <button className=\"ql-video\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-formula\" />\r\n      <button className=\"ql-code-block\" />\r\n      <button className=\"ql-clean\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-undo\">\r\n        <CustomUndo />\r\n      </button>\r\n      <button className=\"ql-redo\">\r\n        <CustomRedo />\r\n      </button>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default QuillToolbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Select, Button, Icon, Divider } from 'semantic-ui-react';\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { addDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport Sidebar from './Sidebar';\r\nimport Topbar from './Topbar';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { app, database } from '../firebase-config'\r\nimport ReactQuill from 'react-quill';\r\nimport EditorToolbar, { modules, formats } from \"./QuillToolbar\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport moment from 'moment';\r\nconst countryOptions = [\r\n    { key: 'private', value: 'private', text: 'Private' },\r\n    { key: 'public', value: 'public', text: 'Public' },\r\n]\r\n\r\nexport default function CreateBlogs({ databaseRef }) {\r\n    let navigate = useNavigate();\r\n    const { state } = useLocation();\r\n    const [title, setTitle] = useState('');\r\n    const [tag, setTag] = useState('');\r\n    const [banner, setBanner] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [file, setFile] = useState({});\r\n    const [privacy, setPrivacy] = useState(null);\r\n    const [blogPost, setBlogPost] = useState('');\r\n    const [username, setUserName] = useState('')\r\n    const [userEmail, setUserEmail] = useState('');\r\n    React.useEffect(() => {\r\n        if (state) {\r\n            const { blogData } = state;\r\n            setTitle(blogData.title)\r\n            setBanner(blogData.banner)\r\n            setTag(blogData.tag)\r\n            setPrivacy(blogData.privacy)\r\n            setBlogPost(blogData.blogPost)\r\n        }\r\n    }, [])\r\n    const getPrivacy = (e) => {\r\n        setPrivacy(e.target.outerText)\r\n    }\r\n    const BlogBodyChange = (blog) => {\r\n        setBlogPost(blog)\r\n    }\r\n\r\n    const submitBlogs = () => {\r\n        if (title && privacy && blogPost) {\r\n            addDoc(databaseRef, {\r\n                title: title,\r\n                privacy: privacy,\r\n                tag: tag,\r\n                avatar: localStorage.getItem('PhotoURL'),\r\n                timestamp: moment().format('LL'),\r\n                userEmail: userEmail,\r\n                author: username ? username : userEmail,\r\n                banner: banner,\r\n                blogPost: blogPost\r\n            })\r\n                .then(() => {\r\n                    navigate('/readBlogs')\r\n                })\r\n        }\r\n        else {\r\n            toast.error(\"Please fill all the fields...\");\r\n        }\r\n    }\r\n\r\n    const updateBlog = () => {\r\n        const collectionById = doc(database, 'react-blogs', state.blogData.id)\r\n        updateDoc(collectionById, {\r\n            title: title,\r\n            privacy: privacy,\r\n            tag: tag,\r\n            userEmail: userEmail,\r\n            banner: banner,\r\n            timestamp: moment().format('LL'),\r\n            blogPost: blogPost\r\n        }).then(() => {\r\n            navigate('/readBlogs')\r\n        })\r\n    }\r\n\r\n    const selectFile = (e) => {\r\n        e.preventDefault();\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const uploadFile = () => {\r\n        const storage = getStorage();\r\n        let uploadedImageName = (Math.random() + 1).toString(36).substring(7);\r\n        const storageRef = ref(storage, uploadedImageName);\r\n        const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n        uploadTask.on('state_changed',\r\n            (snapshot) => {\r\n                setLoading(true)\r\n            },\r\n            (error) => {\r\n                // Handle unsuccessful uploads\r\n            },\r\n            () => {\r\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                    setLoading(false)\r\n                    setBanner(downloadURL)\r\n                    toast.success(\"Banner Added\");\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key');\r\n        setUserName(localStorage.getItem('User Name'));\r\n        setUserEmail(localStorage.getItem('User Email'))\r\n        if (!userToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    const readBlogs = () => {\r\n        window.scrollTo(0, 0)\r\n        navigate('/readBlogs')\r\n    }\r\n    return (\r\n        <div className=\"create-form-container\">\r\n            <Topbar />\r\n            <p className=\"blog-text\">Create a Blog..</p>\r\n            <ToastContainer />\r\n            <div className=\"sidebar-body\">\r\n                <Sidebar />\r\n            </div>\r\n            <Form>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Title</label>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        placeholder='Please Enter the Title'\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Privacy</label>\r\n                    <Select\r\n                        className=\"form-input\"\r\n                        placeholder='Select the Privacy'\r\n                        options={countryOptions}\r\n                        onChange={(e) => getPrivacy(e)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Content</label>\r\n                    <div className='mt-4'>\r\n                        <EditorToolbar />\r\n                        <ReactQuill\r\n                            theme=\"snow\"\r\n                            placeholder={\"Write something awesome...\"}\r\n                            value={blogPost}\r\n                            className='react-quill'\r\n                            modules={modules}\r\n                            formats={formats}\r\n                            onChange={BlogBodyChange} />\r\n                    </div>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Tags</label>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        placeholder='Please Enter the Tags'\r\n                        value={tag}\r\n                        onChange={(e) => setTag(e.target.value)}\r\n                    />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label className=\"form-label\">Banner Image</label>\r\n                    <input type=\"file\" id=\"actual-btn\" hidden onChange={selectFile} />\r\n                    <div className=\"flex-inline\">\r\n                        <label for=\"actual-btn\" className=\"file-label\">\r\n                            {file.name ? file.name : 'Choose Banner Image'}\r\n                        </label>\r\n                        <Button\r\n                            loading={loading ? true : false}\r\n                            primary\r\n                            className=\"upload-button\"\r\n                            onClick={uploadFile}>\r\n                            Upload\r\n                        </Button>\r\n                    </div>\r\n                </Form.Field>\r\n\r\n                {/* <Form.Field>\r\n                    <label className=\"form-label\">Author</label>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        placeholder='Please Enter the Author Name'\r\n                        onChange={(e) => setAuthor(e.target.value)}\r\n                    />\r\n                </Form.Field> */}\r\n                <div className=\"btn-container\">\r\n                    {state ? (\r\n                        <button class=\"btn btn-green\" onClick={updateBlog}>\r\n                            Update your Blog\r\n                        </button>\r\n                    ) : (\r\n                        <button class=\"btn btn-green\" onClick={submitBlogs}>\r\n                            Submit your Blog\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className=\"mobile-only pb-5\">\r\n                    <Divider horizontal>Or</Divider>\r\n                    <p className=\"read-blogs-text\">Don't want to write..</p>\r\n                    <button class=\"btn btn-green btn-block\" onClick={readBlogs}>\r\n                        Read Blogs\r\n                    </button>\r\n                    <button class=\"btn btn-green btn-block blogs-btn\" onClick={() => navigate('/myBlogs')}>\r\n                        My Blogs\r\n                    </button>\r\n                    <button class=\"btn btn-green btn-block blogs-btn\" onClick={() => navigate('/savedBlogs')}>\r\n                        Saved Blogs\r\n                    </button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Feed, Form, Divider } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { getAuth, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport GoogleButton from 'react-google-button'\r\nexport default function Register() {\r\n    let navigate = useNavigate();\r\n    const provider = new GoogleAuthProvider();\r\n    const auth = getAuth();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n\r\n        if (userToken) {\r\n            navigate('/readBlogs')\r\n        }\r\n    }, [])\r\n\r\n    const authWithGoogle = () => {\r\n        signInWithPopup(auth, provider)\r\n        .then((result) => {\r\n            localStorage.setItem('PhotoURL', result.user.photoURL)\r\n            localStorage.setItem('User Name', result.user.displayName);\r\n            localStorage.setItem('User Email', result.user.email);\r\n            sessionStorage.setItem('Auth Key', result.user.accessToken)\r\n            navigate('/readBlogs')\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleRegister = () => {\r\n        if (email && password) {\r\n            signInWithEmailAndPassword(auth, email, password)\r\n                .then((userCredentials) => {\r\n                    localStorage.setItem('User Email', userCredentials.user.email)\r\n                    sessionStorage.setItem('Auth Key', userCredentials.user.accessToken)\r\n                    navigate('/readBlogs')\r\n                })\r\n                .catch((error) => {\r\n                    if (error.code === 'auth/user-not-found') {\r\n                        toast.error(\"User Not Found..\");\r\n                    }\r\n                    else if (error.code === 'auth/wrong-password') {\r\n                        toast.error(\"Please Enter your correct Password..\");\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.error(\"Please Enter the Credentials\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"card-centered\">\r\n            <ToastContainer />\r\n            <Card className=\"card-body\">\r\n                <Card.Content>\r\n                    <Feed>\r\n                        <Feed.Event>\r\n                            {/* <Feed.Label image='/images/avatar/small/jenny.jpg' /> */}\r\n                            <Feed.Content>\r\n                                <Form>\r\n                                    {/* <Form.Field>\r\n                                        <label>Email</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            placeholder='Please Enter your Email'\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                        />\r\n                                    </Form.Field>\r\n                                    <Form.Field>\r\n                                        <label>Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            placeholder='Please Enter your Password'\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                        />\r\n                                    </Form.Field> */}\r\n                                    {/* <div className=\"btn-centered\">\r\n                                        <button\r\n                                            onClick={handleRegister}\r\n                                            class=\"regiser-btn px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">\r\n                                            Sign in..\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => navigate('/register')}\r\n                                            class=\"login-btn px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">\r\n                                            Create your Account..\r\n                                        </button>\r\n                                    </div> */}\r\n                                    {/* <Divider horizontal>Or</Divider> */}\r\n                                    <div className='signup-header'>\r\n                                        <h3>Blogs by Cybernatico</h3>\r\n                                        <p>Sign In to Read Blogs !</p>\r\n                                    </div>\r\n                                    <div className=\"google-btn\">\r\n                                        <GoogleButton\r\n                                           onClick={authWithGoogle}\r\n                                        />\r\n                                    </div>\r\n                                </Form>\r\n                            </Feed.Content>\r\n                        </Feed.Event>\r\n                    </Feed>\r\n                </Card.Content>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDocs, doc, deleteDoc } from 'firebase/firestore';\r\nimport Sidebar from './Sidebar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dimmer, Loader, Image, Popup, Divider, Icon } from 'semantic-ui-react';\r\nimport Topbar from './Topbar';\r\nimport NoData from './NoData';\r\nimport UserImage from '../assets/userImage.png';\r\nimport { database } from '../firebase-config';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nexport default function MyBlogs({ databaseRef }) {\r\n    let navigate = useNavigate();\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [dataLoading, setDataLoading] = useState(true);\r\n    const [userName, setUsername] = useState('')\r\n    const [photoURL, setPhotoURL] = useState('');\r\n    const [savedEmail, setEmail] = useState('')\r\n    const getBlogs = async () => {\r\n        const blogs = await getDocs(databaseRef);\r\n        setBlogs(blogs.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        setDataLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n        if (!userToken) {\r\n            navigate('/login')\r\n        }\r\n        else {\r\n            setUsername(localStorage.getItem('User Name'))\r\n            setEmail(localStorage.getItem('User Email'))\r\n            getBlogs();\r\n            setPhotoURL(localStorage.getItem('PhotoURL'))\r\n        }\r\n    }, [])\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/login')\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const data = doc(database, 'react-blogs', id);\r\n        deleteDoc(data)\r\n            .then(() => {\r\n                getBlogs()\r\n                toast.success(\"Data Deleted Successfully!\", {\r\n                    pauseOnHover: true\r\n                });\r\n            })\r\n    }\r\n\r\n    const handleEdit = (data) => {\r\n        navigate('/createBlogs', {\r\n            state: {\r\n                blogData: data,\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"read-form-container mt-3 mb-2\">\r\n            <ToastContainer />\r\n            <Topbar />\r\n            <div className=\"sidebar-body\">\r\n                <Sidebar />\r\n            </div>\r\n            {blogs.length > 0 ? (\r\n                <div className=\"mobile-only\">\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/createBlogs')}>\r\n                            Write a Blog\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={handleLogout}>\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/savedBlogs')}>\r\n                            Saved Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={() => navigate('/myBlogs')}>\r\n                            My Blogs\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <NoData />\r\n            )}\r\n            {dataLoading ? (\r\n                <Dimmer active>\r\n                    <Loader indeterminate>Loading Blogs for you..</Loader>\r\n                </Dimmer>\r\n            ) : (\r\n                blogs.length > 0 ? (\r\n                    blogs.map((blog) => {\r\n                        return (\r\n                            blog.userEmail === savedEmail ? (\r\n                                <div class=\"blog-posts\">\r\n                                    <div class=\"blog-content\">\r\n                                        <div className=\"three-dots\">\r\n                                            <Popup\r\n                                                on='click'\r\n                                                position='bottom right'\r\n                                                trigger={<BsThreeDotsVertical size=\"1.5rem\" />}\r\n                                            >\r\n                                                <div className=\"popup-container\">\r\n                                                    <p className=\"delete-blog\" onClick={() => handleEdit(blog)}>\r\n                                                        <Icon size=\"large\" name=\"edit\" />\r\n                                                        Edit Post\r\n                                                    </p>\r\n                                                    <Divider />\r\n                                                    <p className=\"delete-blog\" onClick={() => handleDelete(blog.id)}>\r\n                                                        <Icon size=\"large\" name=\"trash\" />\r\n                                                        Delete Post\r\n                                                    </p>\r\n                                                </div>\r\n                                            </Popup>\r\n                                        </div>\r\n                                        {/* <div className=\"banner-container\">\r\n                                                <Image src={blog.banner} className=\"banner-image\" />\r\n                                            </div> */}\r\n                                        <p class=\"blog-timestamp\">{blog.timestamp} / <span className=\"tags-container\">{blog.tag}</span></p>\r\n                                        <p class=\"blog-title\">{blog.title}</p>\r\n                                        <div className=\"author-container\">\r\n                                            <Image\r\n                                                className=\"avatar-img\"\r\n                                                size=\"mini\"\r\n                                                src={blog.avatar ? blog.avatar : UserImage}\r\n                                                avatar />\r\n                                            <p class=\"author-name\">{blog.author.substring(0, 21)}</p>\r\n                                        </div>\r\n                                        <p class=\"blog-post\">\r\n                                            <div dangerouslySetInnerHTML={{ __html: `${blog.blogPost.substring(0, 100)}..` }}></div>\r\n                                        </p>\r\n                                        <div className='readMore'>\r\n                                            <a href={`https://single-blogs.web.app/read/${blog.id}`} target=\"_blank\">Read More...</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )\r\n                        )\r\n                    })\r\n                ) : (\r\n                    <NoData />\r\n                )\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDocs, doc, deleteDoc } from 'firebase/firestore';\r\nimport Sidebar from './Sidebar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dimmer, Loader, Image, Popup, Divider, Icon } from 'semantic-ui-react';\r\nimport Topbar from './Topbar';\r\nimport NoData from './NoData';\r\nimport UserImage from '../assets/userImage.png';\r\nimport { database } from '../firebase-config';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nexport default function SavedBlogs({ savedRef }) {\r\n    let navigate = useNavigate();\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [dataLoading, setDataLoading] = useState(true);\r\n    const [savedEmail, setEmail] = useState('')\r\n    const [photoURL, setPhotoURL] = useState('');\r\n    const getBlogs = async () => {\r\n        const blogs = await getDocs(savedRef);\r\n        setBlogs(blogs.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        setDataLoading(false);\r\n    }\r\n    useEffect(() => {\r\n        let userToken = sessionStorage.getItem('Auth Key')\r\n        if (!userToken) {\r\n            navigate('/login')\r\n        }\r\n        else {\r\n            setEmail(localStorage.getItem('User Email'))\r\n            getBlogs();\r\n            setPhotoURL(localStorage.getItem('PhotoURL'))\r\n        }\r\n    }, [])\r\n\r\n    const handleEdit = (data) => {\r\n        navigate('/createBlogs', {\r\n            state: {\r\n                blogData: data,\r\n            }\r\n        })\r\n    }\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('User Name');\r\n        localStorage.removeItem('User Email');\r\n        sessionStorage.removeItem('Auth Key');\r\n        navigate('/login')\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        const data = doc(database, 'saved-blogs', id);\r\n        deleteDoc(data)\r\n            .then(() => {\r\n                getBlogs()\r\n                toast.success(\"Data Deleted Successfully!\", {\r\n                    pauseOnHover: true\r\n                });\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"read-form-container mt-3 mb-2\">\r\n            <ToastContainer />\r\n            <Topbar />\r\n            <div className=\"sidebar-body\">\r\n                <Sidebar />\r\n            </div>\r\n            {blogs.length > 0 ? (\r\n                <div className=\"mobile-only\">\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/createBlogs')}>\r\n                            Write a Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={handleLogout}>\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"create-button\">\r\n                        <button class=\"btn btn-green\" onClick={() => navigate('/savedBlogs')}>\r\n                            Saved Blogs\r\n                        </button>\r\n                        <button class=\"btn btn-green ml-3\" onClick={() => navigate('/myBlogs')}>\r\n                            My Blogs\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            {\r\n                dataLoading ? (\r\n                    <Dimmer active>\r\n                        <Loader indeterminate>Loading Blogs for you..</Loader>\r\n                    </Dimmer>\r\n                ) : (\r\n                    blogs.length > 0 ? (\r\n                        blogs.map((blog) => {\r\n                            return (\r\n                                blog.userEmail === savedEmail ? (\r\n                                    <div class=\"blog-posts\">\r\n                                        <div class=\"blog-content\">\r\n                                            <div className=\"three-dots\">\r\n                                                <Popup\r\n                                                    on='click'\r\n                                                    position='bottom right'\r\n                                                    trigger={<BsThreeDotsVertical size=\"1.5rem\" />}\r\n                                                >\r\n                                                    <div className=\"popup-container\">\r\n                                                        <p className=\"delete-blog\" onClick={() => handleEdit(blog)}>\r\n                                                            <Icon size=\"large\" name=\"edit\" />\r\n                                                            Edit Post\r\n                                                        </p>\r\n                                                        <Divider />\r\n                                                        <p className=\"delete-blog\" onClick={() => handleDelete(blog.id)}>\r\n                                                            <Icon size=\"large\" name=\"trash\" />\r\n                                                            Delete Post\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            </div>\r\n                                            {/* <div className=\"banner-container\">\r\n                                                <Image src={blog.banner} className=\"banner-image\" />\r\n                                            </div> */}\r\n                                            <p class=\"blog-timestamp\">{blog.timestamp} / <span className=\"tags-container\">{blog.tag}</span></p>\r\n                                            <p class=\"blog-title\">{blog.title}</p>\r\n                                            <div className=\"author-container\">\r\n                                                <Image className=\"avatar-img\" size=\"mini\" src={blog.avatar ? blog.avatar : UserImage} avatar />\r\n                                                <p class=\"author-name\">{blog.author.substring(0, 21)}</p>\r\n                                            </div>\r\n                                            <p class=\"blog-post\">\r\n                                                <div dangerouslySetInnerHTML={{ __html: `${blog.blogPost.substring(0, 100)}..` }}></div>\r\n                                            </p>\r\n                                            <div className='readMore'>\r\n                                                <a href={`https://single-blogs.web.app/read/${blog.id}`} target=\"_blank\">Read More...</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    \"\"\r\n                                )\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <NoData />\r\n                    )\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\r\nimport { app, database } from './firebase-config'\r\nimport { collection } from 'firebase/firestore'\r\nimport ReadBlogs from './Components/ReadBlogs';\r\nimport CreateBlogs from './Components/CreateBlogs';\r\nimport Login from './Components/Login';\r\nimport MyBlogs from './Components/MyBlogs';\r\nimport SavedBlogs from './Components/SavedBlogs';\r\nimport { Route, Routes, useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nconst databaseRef = collection(database, 'react-blogs');\r\nconst savedRef = collection(database, 'saved-blogs');\r\nfunction App() {\r\n  let navigate = useNavigate();\r\n  useEffect(() => {\r\n    navigate('/login')\r\n  }, [])\r\n  return (\r\n    <div className=\"main-body\">\r\n      <Routes>\r\n        <Route exact path='/login' element={<Login />} />\r\n      </Routes>\r\n      <div className=\"blog-body\">\r\n        <Routes>\r\n          <Route exact path='/myBlogs' element={<MyBlogs\r\n            databaseRef={databaseRef}\r\n          />} />\r\n          <Route exact path='/readBlogs' element={<ReadBlogs\r\n            databaseRef={databaseRef} savedRef={savedRef}\r\n          />} />\r\n          <Route exact path='/createBlogs' element={<CreateBlogs\r\n            databaseRef={databaseRef}\r\n          />} />\r\n          <Route exact path='/savedBlogs' element={<SavedBlogs\r\n            databaseRef={databaseRef} savedRef={savedRef}\r\n          />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}